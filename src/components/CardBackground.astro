---
interface imagen {
    url:string,
    descripcion:string
}
interface card {
    imagen:Array<imagen>,
    subtitulo:string,
    texto:string,
    clase:string
}
interface Props {
	title:string,
    fondo:string,
    informacion:Array<card>
}

const { title,fondo,informacion } = Astro.props;
---
<main class={fondo}> 
    <section>
        {title && <h1>{title}</h1>}
        <article>
            {
                informacion?.map(({subtitulo,texto,imagen,clase}) => {
                    const {url,descripcion} = imagen[0]
                    return (
                    <div class={clase}>
                        <figure>
                            <img src={url} alt={descripcion}/>
                        </figure>
                        <div >
                            <h2>{subtitulo}</h2>
                            <p>{texto}</p>
                        </div>
                    </div>
                    )
                })   
            }
        </article>
    </section>
</main>

<style>
    main {
        width: 100%;
		min-height: 100vh;
		margin: 0 auto;
	}
	.fondo {
		background-color: #0e2d5ff8;
        clip-path: polygon(0% 0%, 100% 0%, 100% calc(100% - 1rem), 0% 100%);
	}

    section { 
    margin-top: 3rem;
    margin-left: auto;
    margin-right: auto;
    padding: 3rem 2rem;
}
section h1 {
    text-transform: uppercase;
    font-size: 1.7rem;
    text-align: center;
}

h1,h2,p {
    color: var(--color2);
}
.fondo h1{
    color:var(--color1);
}
.fondo .flex div h2 {
    color:var(--color1);
}

.fondo .flex div p {
    color:var(--color1);
}
article {
    margin-top: 2rem;
}

.flex {
    width: 100%;
    display: flex;
    flex-direction: column-reverse;
}


.flex h2,p {
    margin-top: .5rem;
    line-height: 1.6;
}
.flex h2 {
    font-size: 1.5rem;
}
.flex p {
    font-size: 1.3rem;
}
figure {
    margin: 2rem 0;
}
img {
    width: 100%;
    height: 100%;
    border-radius: 16px;
  }
	/* Small devices (landscape phones, 576px and up) */
@media (min-width: 576px) {
main {
		padding:40px 30px;
		width: 100%;
	}
}

/* Max device ( 320px) */
@media (max-width: 320px) { 
    section h1 {
        font-size: 1.5rem;
    }
    .flex h2 {
        font-size: 1.3rem;
    }
    .flex p {
        font-size: 1.1rem
    }
}

/* Medium devices (tablets, 768px and up) */
@media (min-width: 768px) {
	main {
		padding:10px 30px;
		width: 100%;
        min-height: 50vh;
	}
    section {
        padding: 3rem 1rem;
    }
    section h1 {
        font-size: 1.8rem;
    }
    article {
        margin-top: 3rem;
    }
.flex {
    width: 100%;
    display: flex;
    align-items: center;
        align-content: center;
    gap: 2rem;
    flex-direction: row;
}
.flex img {
    width: 250px;
    height: 200px;
}
.flex-reverse {
    flex-direction: row-reverse;
}
.flex p {
    text-align: justify;
}

}


/* Large devices (desktops, 992px and up) */
@media (min-width: 992px) {
	main {
		padding:40px 50px;
		width: 100%;
		
	}
    .flex {
        gap: 3rem;
    }
    .flex img {
    width: 350px;
    height: 300px;
    }
}

/* Extra large devices (large desktops, 1200px and up) */
@media (min-width: 1200px) {
	main {
		padding:20px 70px;
		width: 100%;
		margin: 0 auto;
	}
    section {
        margin-top: 2rem;
        padding:3rem 0;
    }
	section h1 {
        font-size: 2.2rem;
    }
    .flex h2 {
        font-size: 1.7rem
    }
    .flex {
        align-items: center;
        align-content: center;
        gap: 4rem;
    }
    .flex img {
    width: 450px;
    height: 300px;
}
	
}
</style>