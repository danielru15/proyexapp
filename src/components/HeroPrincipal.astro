---
import Particles from "astro-particles";
import type { ISourceOptions } from "tsparticles-engine"
import type { RecursivePartial } from "tsparticles-engine";


// Define your style object
const canvasStyles: RecursivePartial<CSSStyleDeclaration> = {
  position: "absolute",
  top: "0",
  width: "100%",
  height: "100dhv",
};

const options: ISourceOptions = {
  
   "fps_limit":60,
   "interactivity":{
      "detectsOn":"canvas",
      "events":{
         "onClick":{
            "enable":true,
            "mode":"push"
         },
         "onHover":{
            "enable":true,
            "mode":"repulse"
         },
         "resize":false
      },
      "modes":{
         "push":{
            "particles_nb":4
         },
         "repulse":{
            "distance":100,
            "duration":0.4
         }
      }
   },
   "particles":{
      "color":{
         "value":"#ffffff"
      },
      "links":{
         "color":"#ffffff",
         "distance":150,
         "enable":true,
         "opacity":0.4,
         "width":1
      },
      "move":{
         "bounce":false,
         "direction":"none",
         "enable":true,
         "outMode":"out",
         "random":false,
         "speed":2,
         "straight":false
      },
      "number":{
         "density":{
            "enable":true,
            "area":800
         },
         "value":60
      },
      "opacity":{
         "value":0.5
      },
      "shape":{
         "type":"circle"
      },
      "size":{
         "random":true,
         "value":5
      }
   },
   "detectRetina":true,
   "style": canvasStyles,
}


interface Props {
	title: string; //titulo de la pagina

}
const { title } = Astro.props;


---
<script>
  import { type Container, type Engine, tsParticles } from "tsparticles-engine";
  import { loadFull } from "tsparticles";

  // the function name is the parameter passed to the init attribute
  // required
  // add the function to window is mandatory, it will be searched there
  window.particlesInit = async function (engine: Engine) {
      await loadFull(engine);
  }
  
  // the function name is the parameter passed to the loaded attribute
  // optional
  // add the function to window is mandatory, it will be searched there
  window.particlesLoaded = function (container: Container) {
      console.log("particlesLoaded callback");
  }
</script>
<section id="parallax">
  
  <div>
    <h1>{title}</h1>
    <a href="https://wa.me/573217513801?text=Hola,%20me%20gustaría%20cotizar%20una%20página%20web" target="_blank" class="cta-button">¡Diseña tu sitio web!</a>
  </div>
  <Particles id="tsparticles"  options={options} init="particlesInit"/>
</section>


<style>
  section {
  height: 100dvh;
  position: relative;
  overflow: hidden;
  border-bottom-right-radius: 6rem;
  clip-path: polygon(0 0, 100% 0, 100% calc(100% - 100px), calc(100% - 100px) 100%, 0 100%);
}

section::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(to left, rgba(14, 45, 95, 0.86), rgba(14, 45, 95, 0.735)), url(/background-image.webp);
  background-size: cover;
  background-position: center;
  z-index: -1;
  transform: translateY(0);
  transition: transform 0.3s ease-out;
}


section div {
  width: 100%;
  height: 100%;
  position: absolute;
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  text-align: center;
  gap: 1rem;
  padding: 0 3rem;
}
#tsparticles {
  position: absolute;
  width: 100%;
  height: 100%;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: 50% 50%;
}
section div h1 {
  font-size: 2.3rem;
  color: var(--color_cuarto);
  text-shadow: var(--text-shadow);
}
.cta-button {
  margin-top: 20px;
  padding: 15px 30px;
  font-size: 1.5rem;
  color:var(--color_primario);
  background-color: var(--color_secundario);
  border: none;
  border-radius:var(--border-radius);
  cursor: pointer;
  text-transform: uppercase;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  transition: background-color 0.3s ease, transform 0.3s ease;
}

.cta-button:hover {
  transform: translateY(-3px);
}
@media (max-width: 280px) {
  section div h1 {
    font-size: 2rem;
  }
}

@media (min-width: 768px) {
  section div h1 {
    font-size: 2.8rem;
  }
}

@media (min-width: 1200px) {
  section div h1 {
    font-size: 3.3rem;
  }
}
</style>


